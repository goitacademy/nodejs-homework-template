"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OIDCErrorPage = exports.OIDCNotFoundPage = exports.OIDCAcceptedPage = void 0;
const react_1 = __importDefault(require("react"));
const compass_components_1 = require("@mongodb-js/compass-components");
const bodyStyles = (0, compass_components_1.css)({
    position: 'absolute',
    margin: 0,
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center'
});
const emptySidebarStyles = (0, compass_components_1.css)({
    flex: '0 0 15%',
    height: '100%',
    backgroundColor: compass_components_1.palette.green.dark2
});
const mainViewStyles = (0, compass_components_1.css)({
    flex: '0 0 85%',
    height: '100%',
    backgroundColor: compass_components_1.palette.gray.light3
});
const mainContainerStyles = (0, compass_components_1.css)({
    padding: compass_components_1.spacing[6]
});
const mainContentStyles = (0, compass_components_1.css)({
    textAlign: 'center',
    padding: compass_components_1.spacing[7],
    marginTop: compass_components_1.spacing[5]
});
const successIconStyles = (0, compass_components_1.css)({
    color: compass_components_1.palette.green.dark2,
    marginBottom: compass_components_1.spacing[3] + compass_components_1.spacing[1]
});
const failureIconStyles = (0, compass_components_1.css)({
    color: compass_components_1.palette.red.base,
    marginBottom: compass_components_1.spacing[3] + compass_components_1.spacing[1]
});
function DocsLink({ productDocsLink, productName }) {
    return (productDocsLink ? react_1.default.createElement("p", null,
        react_1.default.createElement(compass_components_1.Link, { arrowAppearance: "persist", href: productDocsLink },
            productName,
            " Documentation")) : react_1.default.createElement(react_1.default.Fragment, null));
}
function PageContainer({ title, children }) {
    return (react_1.default.createElement("html", null,
        react_1.default.createElement("head", null,
            react_1.default.createElement("title", null, title)),
        react_1.default.createElement("body", { className: bodyStyles },
            react_1.default.createElement("div", { className: emptySidebarStyles }),
            react_1.default.createElement("div", { className: mainViewStyles },
                react_1.default.createElement("div", { className: mainContainerStyles },
                    react_1.default.createElement(compass_components_1.MongoDBLogo, null),
                    react_1.default.createElement(compass_components_1.KeylineCard, { className: mainContentStyles }, children))))));
}
function OIDCAcceptedPage(baseProps) {
    return (react_1.default.createElement(PageContainer, { title: "Login Successful" },
        react_1.default.createElement(compass_components_1.Icon, { glyph: 'CheckmarkWithCircle', size: 40, className: (0, compass_components_1.cx)(successIconStyles) }),
        react_1.default.createElement(compass_components_1.H3, null, "Login Successful"),
        react_1.default.createElement(compass_components_1.Description, null, "You can close this window now."),
        react_1.default.createElement(DocsLink, { ...baseProps })));
}
exports.OIDCAcceptedPage = OIDCAcceptedPage;
function OIDCNotFoundPage(baseProps) {
    return (react_1.default.createElement(PageContainer, { title: "Page Not Found" },
        react_1.default.createElement(compass_components_1.Icon, { glyph: 'XWithCircle', size: 40, className: (0, compass_components_1.cx)(failureIconStyles) }),
        react_1.default.createElement(compass_components_1.H3, null, "Page Not Found"),
        react_1.default.createElement(compass_components_1.Description, null, "This page is not available."),
        react_1.default.createElement(DocsLink, { ...baseProps })));
}
exports.OIDCNotFoundPage = OIDCNotFoundPage;
function OIDCErrorPage({ error, errorDescription, errorURI, ...baseProps }) {
    return (react_1.default.createElement(PageContainer, { title: "Authentication Failed" },
        react_1.default.createElement(compass_components_1.Icon, { glyph: 'XWithCircle', size: 40, className: (0, compass_components_1.cx)(failureIconStyles) }),
        react_1.default.createElement(compass_components_1.H3, null, "Authentication Failed"),
        react_1.default.createElement(compass_components_1.Body, null,
            react_1.default.createElement(compass_components_1.Description, null,
                baseProps.productName,
                " could not authenticate to the MongoDB server."),
            error && react_1.default.createElement(compass_components_1.Body, null,
                "Error Code: ",
                react_1.default.createElement(compass_components_1.InlineCode, null, error)),
            (errorDescription || errorURI) && react_1.default.createElement(compass_components_1.Description, null,
                errorDescription,
                errorURI && react_1.default.createElement("p", null,
                    react_1.default.createElement(compass_components_1.Link, { href: errorURI }, "Additional information may be available here.")))),
        react_1.default.createElement(DocsLink, { ...baseProps })));
}
exports.OIDCErrorPage = OIDCErrorPage;
//# sourceMappingURL=pages-source.js.map