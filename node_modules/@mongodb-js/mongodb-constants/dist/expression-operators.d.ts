declare const EXPRESSION_OPERATORS: readonly [{
    readonly name: "$abs";
    readonly value: "$abs";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$accumulator";
    readonly value: "$accumulator";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "4.4.0";
}, {
    readonly name: "$add";
    readonly value: "$add";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "2.2.0";
}, {
    readonly name: "$allElementsTrue";
    readonly value: "$allElementsTrue";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$and";
    readonly value: "$and";
    readonly score: 1;
    readonly meta: "expr:bool";
    readonly version: "2.2.0";
}, {
    readonly name: "$anyElementTrue";
    readonly value: "$anyElementTrue";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$arrayElemAt";
    readonly value: "$arrayElemAt";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.2.0";
}, {
    readonly name: "$arrayToObject";
    readonly value: "$arrayToObject";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.4";
}, {
    readonly name: "$binarySize";
    readonly value: "$binarySize";
    readonly score: 1;
    readonly meta: "expr:obj";
    readonly version: "4.4.0";
}, {
    readonly name: "$bsonSize";
    readonly value: "$bsonSize";
    readonly score: 1;
    readonly meta: "expr:obj";
    readonly version: "4.4.0";
}, {
    readonly name: "$ceil";
    readonly value: "$ceil";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$cmp";
    readonly value: "$cmp";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$concat";
    readonly value: "$concat";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "2.4.0";
}, {
    readonly name: "$concatArrays";
    readonly value: "$concatArrays";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.2.0";
}, {
    readonly name: "$cond";
    readonly value: "$cond";
    readonly score: 1;
    readonly meta: "expr:cond";
    readonly version: "2.6.0";
}, {
    readonly name: "$dateAdd";
    readonly value: "$dateAdd";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.0.0";
}, {
    readonly name: "$dateDiff";
    readonly value: "$dateDiff";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.0.0";
}, {
    readonly name: "$dateFromParts";
    readonly value: "$dateFromParts";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.6.0";
}, {
    readonly name: "$dateFromString";
    readonly value: "$dateFromString";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.6.0";
}, {
    readonly name: "$dateSubtract";
    readonly value: "$dateSubtract";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.0.0";
}, {
    readonly name: "$dateToParts";
    readonly value: "$dateToParts";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.6.0";
}, {
    readonly name: "$dateToString";
    readonly value: "$dateToString";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.6.0";
}, {
    readonly name: "$dateTrunc";
    readonly value: "$dateTrunc";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.0.0";
}, {
    readonly name: "$dayOfMonth";
    readonly value: "$dayOfMonth";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$dayOfWeek";
    readonly value: "$dayOfWeek";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$dayOfYear";
    readonly value: "$dayOfYear";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$dateToString";
    readonly value: "$dateToString";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.0.0";
}, {
    readonly name: "$divide";
    readonly value: "$divide";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "2.2.0";
}, {
    readonly name: "$eq";
    readonly value: "$eq";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$exp";
    readonly value: "$exp";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$filter";
    readonly value: "$filter";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.2.0";
}, {
    readonly name: "$first";
    readonly value: "$first";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "4.4.0";
}, {
    readonly name: "$floor";
    readonly value: "$floor";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$function";
    readonly value: "$function";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "4.4.0";
}, {
    readonly name: "$getField";
    readonly value: "$getField";
    readonly score: 1;
    readonly meta: "expr:get";
    readonly version: "5.0.0";
}, {
    readonly name: "$gt";
    readonly value: "$gt";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$gte";
    readonly value: "$gte";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$hour";
    readonly value: "$hour";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$ifNull";
    readonly value: "$ifNull";
    readonly score: 1;
    readonly meta: "expr:cond";
    readonly version: "2.2.0";
}, {
    readonly name: "$in";
    readonly value: "$in";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$indexOfArray";
    readonly value: "$indexOfArray";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$indexOfBytes";
    readonly value: "$indexOfBytes";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$indexOfCP";
    readonly value: "$indexOfCP";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$isArray";
    readonly value: "$isArray";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.2.0";
}, {
    readonly name: "$isNumber";
    readonly value: "$isNumber";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "4.4.0";
}, {
    readonly name: "$isoDayOfWeek";
    readonly value: "$isoDayOfWeek";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.4.0";
}, {
    readonly name: "$isoWeek";
    readonly value: "$isoWeek";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.4.0";
}, {
    readonly name: "$isoWeekYear";
    readonly value: "$isoWeekYear";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "3.4.0";
}, {
    readonly name: "$last";
    readonly value: "$last";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "4.4.0";
}, {
    readonly name: "$let";
    readonly value: "$let";
    readonly score: 1;
    readonly meta: "expr:var";
    readonly version: "2.6.0";
}, {
    readonly name: "$literal";
    readonly value: "$literal";
    readonly score: 1;
    readonly meta: "expr:literal";
    readonly version: "2.6.0";
}, {
    readonly name: "$lt";
    readonly value: "$lt";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$lt";
    readonly value: "$lte";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$ln";
    readonly value: "$ln";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$log";
    readonly value: "$log";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$log10";
    readonly value: "$log10";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$map";
    readonly value: "$map";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "2.6.0";
}, {
    readonly name: "$mergeObjects";
    readonly value: "$mergeObjects";
    readonly score: 1;
    readonly meta: "expr:obj";
    readonly version: "3.6.0";
}, {
    readonly name: "$meta";
    readonly value: "$meta";
    readonly score: 1;
    readonly meta: "expr:text";
    readonly version: "2.6.0";
}, {
    readonly name: "$millisecond";
    readonly value: "$millisecond";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.4.0";
}, {
    readonly name: "$minute";
    readonly value: "$minute";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$mod";
    readonly value: "$mod";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "2.2.0";
}, {
    readonly name: "$month";
    readonly value: "$month";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$multiply";
    readonly value: "$multiply";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "2.2.0";
}, {
    readonly name: "$new";
    readonly value: "$new";
    readonly score: 1;
    readonly meta: "expr:comp";
    readonly version: "2.2.0";
}, {
    readonly name: "$not";
    readonly value: "$not";
    readonly score: 1;
    readonly meta: "expr:bool";
    readonly version: "2.2.0";
}, {
    readonly name: "$objectToArray";
    readonly value: "$objectToArray";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.4";
}, {
    readonly name: "$or";
    readonly value: "$or";
    readonly score: 1;
    readonly meta: "expr:bool";
    readonly version: "2.2.0";
}, {
    readonly name: "$pow";
    readonly value: "$pow";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$range";
    readonly value: "$range";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$reduce";
    readonly value: "$reduce";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$regexFind";
    readonly value: "$regexFind";
    readonly score: 1;
    readonly meta: "expr:regex";
    readonly version: "4.1.11";
}, {
    readonly name: "$regexFindAll";
    readonly value: "$regexFindAll";
    readonly score: 1;
    readonly meta: "expr:regex";
    readonly version: "4.1.11";
}, {
    readonly name: "$regexMatch";
    readonly value: "$regexMatch";
    readonly score: 1;
    readonly meta: "expr:regex";
    readonly version: "4.1.11";
}, {
    readonly name: "$replaceAll";
    readonly value: "$replaceAll";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "4.4.0";
}, {
    readonly name: "$replaceOne";
    readonly value: "$replaceOne";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "4.4.0";
}, {
    readonly name: "$reverseArray";
    readonly value: "$reverseArray";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$second";
    readonly value: "$second";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$setDifference";
    readonly value: "$setDifference";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$setEquals";
    readonly value: "$setEquals";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$setIntersection";
    readonly value: "$setIntersection";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$setIsSubset";
    readonly value: "$setIsSubset";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$setUnion";
    readonly value: "$setUnion";
    readonly score: 1;
    readonly meta: "expr:set";
    readonly version: "2.6.0";
}, {
    readonly name: "$size";
    readonly value: "$size";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "2.6.0";
}, {
    readonly name: "$slice";
    readonly value: "$slice";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.2.0";
}, {
    readonly name: "$sortArray";
    readonly value: "$sortArray";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "5.2.0";
}, {
    readonly name: "$split";
    readonly value: "$split";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$sqrt";
    readonly value: "$sqrt";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$strcasecmp";
    readonly value: "$strcasecmp";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "2.2.0";
}, {
    readonly name: "$strLenBytes";
    readonly value: "$strLenBytes";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$strLenCP";
    readonly value: "$strLenCP";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$substr";
    readonly value: "$substr";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "2.2.0";
    readonly deprecated: "3.4.0";
    readonly replacement: "$substrBytes";
}, {
    readonly name: "$substrBytes";
    readonly value: "$substrBytes";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$substrCP";
    readonly value: "$substrCP";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "3.4.0";
}, {
    readonly name: "$subtract";
    readonly value: "$subtract";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$switch";
    readonly value: "$switch";
    readonly score: 1;
    readonly meta: "expr:cond";
    readonly version: "3.4.0";
}, {
    readonly name: "$toLower";
    readonly value: "$toLower";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "2.2.0";
}, {
    readonly name: "$toUpper";
    readonly value: "$toUpper";
    readonly score: 1;
    readonly meta: "expr:string";
    readonly version: "2.2.0";
}, {
    readonly name: "$tsSecond";
    readonly value: "$tsSecond";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.1.0";
}, {
    readonly name: "$tsIncrement";
    readonly value: "$tsIncrement";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "5.1.0";
}, {
    readonly name: "$trunc";
    readonly value: "$trunc";
    readonly score: 1;
    readonly meta: "expr:arith";
    readonly version: "3.2.0";
}, {
    readonly name: "$type";
    readonly value: "$type";
    readonly score: 1;
    readonly meta: "expr:type";
    readonly version: "3.4.0";
}, {
    readonly name: "$week";
    readonly value: "$week";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$year";
    readonly value: "$year";
    readonly score: 1;
    readonly meta: "expr:date";
    readonly version: "2.2.0";
}, {
    readonly name: "$zip";
    readonly value: "$zip";
    readonly score: 1;
    readonly meta: "expr:array";
    readonly version: "3.4.0";
}, {
    readonly name: "$bitAnd";
    readonly value: "$bitAnd";
    readonly score: 1;
    readonly meta: "expr:bit";
    readonly version: "7.0.0";
}, {
    readonly name: "$bitOr";
    readonly value: "$bitOr";
    readonly score: 1;
    readonly meta: "expr:bit";
    readonly version: "7.0.0";
}, {
    readonly name: "$bitXor";
    readonly value: "$bitXor";
    readonly score: 1;
    readonly meta: "expr:bit";
    readonly version: "7.0.0";
}, {
    readonly name: "$bitNot";
    readonly value: "$bitNot";
    readonly score: 1;
    readonly meta: "expr:bit";
    readonly version: "7.0.0";
}];
export { EXPRESSION_OPERATORS };
//# sourceMappingURL=expression-operators.d.ts.map