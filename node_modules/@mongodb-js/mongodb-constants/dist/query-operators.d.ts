declare const QUERY_OPERATORS: readonly [{
    readonly name: "$all";
    readonly value: "$all";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$and";
    readonly value: "$and";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$bitsAllClear";
    readonly value: "$bitsAllClear";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$bitsAllSet";
    readonly value: "$bitsAllSet";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$bitsAnyClear";
    readonly value: "$bitsAnyClear";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$bitsAnySet";
    readonly value: "$bitsAnySet";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$comment";
    readonly value: "$comment";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$elemMatch";
    readonly value: "$elemMatch";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$eq";
    readonly value: "$eq";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$exists";
    readonly value: "$exists";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$expr";
    readonly value: "$expr";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.6.0";
    readonly geospatial: false;
}, {
    readonly name: "$geoIntersects";
    readonly value: "$geoIntersects";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: true;
}, {
    readonly name: "$geoWithin";
    readonly value: "$geoWithin";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: true;
}, {
    readonly name: "$gt";
    readonly value: "$gt";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$gte";
    readonly value: "$gte";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$in";
    readonly value: "$in";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$jsonSchema";
    readonly value: "$jsonSchema";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "3.6.0";
    readonly geospatial: false;
}, {
    readonly name: "$lt";
    readonly value: "$lt";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$lte";
    readonly value: "$lte";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$mod";
    readonly value: "$mod";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$ne";
    readonly value: "$ne";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$near";
    readonly value: "$near";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: true;
}, {
    readonly name: "$nearSphere";
    readonly value: "$nearSphere";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: true;
}, {
    readonly name: "$nin";
    readonly value: "$nin";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$not";
    readonly value: "$not";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$nor";
    readonly value: "$nor";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$or";
    readonly value: "$or";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$regex";
    readonly value: "$regex";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$size";
    readonly value: "$size";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$slice";
    readonly value: "$slice";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$text";
    readonly value: "$text";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$type";
    readonly value: "$type";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}, {
    readonly name: "$where";
    readonly value: "$where";
    readonly score: 1;
    readonly meta: "query";
    readonly version: "2.2.0";
    readonly geospatial: false;
}];
export { QUERY_OPERATORS };
//# sourceMappingURL=query-operators.d.ts.map