import { ShellInstanceState, ShellResult, EvaluationListener } from '@mongosh/shell-api';
declare type EvaluationFunction = (input: string, context: object, filename: string) => Promise<any>;
declare type ResultHandler<EvaluationResultType> = (value: any) => EvaluationResultType | Promise<EvaluationResultType>;
declare class ShellEvaluator<EvaluationResultType = ShellResult> {
    private instanceState;
    private resultHandler;
    private hasAppliedAsyncWriterRuntimeSupport;
    private asyncWriter;
    constructor(instanceState: ShellInstanceState, resultHandler?: ResultHandler<EvaluationResultType>);
    private innerEval;
    customEval(originalEval: EvaluationFunction, input: string, context: object, filename: string): Promise<EvaluationResultType>;
}
export { ShellResult, ShellEvaluator, EvaluationListener };
