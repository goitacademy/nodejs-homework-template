"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateOrFindCursor = void 0;
const decorators_1 = require("./decorators");
const helpers_1 = require("./helpers");
const abstract_cursor_1 = require("./abstract-cursor");
let AggregateOrFindCursor = class AggregateOrFindCursor extends abstract_cursor_1.AbstractCursor {
    projection(spec) {
        this._cursor.project(spec);
        return this;
    }
    skip(value) {
        this._cursor.skip(value);
        return this;
    }
    sort(spec) {
        this._cursor.sort(spec);
        return this;
    }
    async explain(verbosity) {
        if (verbosity !== undefined) {
            verbosity = (0, helpers_1.validateExplainableVerbosity)(verbosity);
        }
        const fullExplain = await this._cursor.explain(verbosity);
        const explain = {
            ...fullExplain
        };
        if (verbosity !== 'executionStats' &&
            verbosity !== 'allPlansExecution' &&
            explain.executionStats) {
            delete explain.executionStats;
        }
        if (verbosity === 'executionStats' &&
            explain.executionStats &&
            explain.executionStats.allPlansExecution) {
            delete explain.executionStats.allPlansExecution;
        }
        return (0, helpers_1.markAsExplainOutput)(explain);
    }
};
__decorate([
    (0, decorators_1.returnType)('this')
], AggregateOrFindCursor.prototype, "projection", null);
__decorate([
    (0, decorators_1.returnType)('this')
], AggregateOrFindCursor.prototype, "skip", null);
__decorate([
    (0, decorators_1.returnType)('this')
], AggregateOrFindCursor.prototype, "sort", null);
__decorate([
    decorators_1.returnsPromise,
    (0, decorators_1.apiVersions)([1])
], AggregateOrFindCursor.prototype, "explain", null);
AggregateOrFindCursor = __decorate([
    decorators_1.shellApiClassNoHelp
], AggregateOrFindCursor);
exports.AggregateOrFindCursor = AggregateOrFindCursor;
//# sourceMappingURL=aggregate-or-find-cursor.js.map