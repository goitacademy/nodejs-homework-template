"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAnyLogEntry = void 0;
function parseOldLogEntry(line) {
    const re = /^(?<timestamp>\S*) *(?<severity>\S*) *(?<component>\S*) *\[(?<context>[^\]]+)\]\s*(?<message>.*)$/;
    const match = line.trim().match(re);
    if (!match) {
        throw new Error(`Could not parse line ${JSON.stringify(line)}`);
    }
    return match.groups;
}
function parseAnyLogEntry(line) {
    var _a;
    try {
        const newFormat = JSON.parse(line);
        return {
            id: newFormat.id,
            timestamp: (_a = newFormat.t) === null || _a === void 0 ? void 0 : _a.$date,
            severity: newFormat.s,
            component: newFormat.c,
            context: newFormat.ctx,
            message: newFormat.msg,
            attr: newFormat.attr
        };
    }
    catch (_b) {
        return parseOldLogEntry(line);
    }
}
exports.parseAnyLogEntry = parseAnyLogEntry;
//# sourceMappingURL=log-entry.js.map