"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransformMongoErrorPlugin = exports.rephraseMongoError = void 0;
const ERROR_REPHRASES = [
    {
        code: 13435,
        replacement: 'not primary and secondaryOk=false - consider using db.getMongo().setReadPref() or readPreference in the connection string'
    }
];
function rephraseMongoError(error) {
    if (!isMongoError(error)) {
        return error;
    }
    const e = error;
    const message = e.message;
    const rephrase = ERROR_REPHRASES.find(m => {
        if (m.matchMessage) {
            return typeof m.matchMessage === 'string' ? message.includes(m.matchMessage) : m.matchMessage.test(message);
        }
        return m.code !== undefined && e.code === m.code;
    });
    if (rephrase) {
        e.message = typeof rephrase.replacement === 'function' ? rephrase.replacement(message) : rephrase.replacement;
    }
    return e;
}
exports.rephraseMongoError = rephraseMongoError;
function isMongoError(error) {
    var _a, _b, _c;
    return /^Mongo([A-Z].*)?Error$/.test((_c = (_b = (_a = Object.getPrototypeOf(error)) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) !== null && _c !== void 0 ? _c : '');
}
class TransformMongoErrorPlugin {
    transformError(err) {
        return rephraseMongoError(err);
    }
}
exports.TransformMongoErrorPlugin = TransformMongoErrorPlugin;
//# sourceMappingURL=mongo-errors.js.map