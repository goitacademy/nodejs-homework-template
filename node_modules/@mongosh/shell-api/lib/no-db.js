"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("@mongosh/errors");
const error_codes_1 = require("./error-codes");
class NoDatabase {
    constructor() {
        this._mongo = new NoMongo();
        const proxy = new Proxy(this, {
            get: (_target, prop) => {
                if (prop === '_mongo')
                    return this._mongo;
                throw new errors_1.MongoshInvalidInputError('No connected database', error_codes_1.ShellApiErrors.NotConnected);
            }
        });
        return proxy;
    }
}
exports.default = NoDatabase;
class NoMongo {
    constructor() {
        const proxy = new Proxy(this, {
            get: () => {
                throw new errors_1.MongoshInvalidInputError('No connected database', error_codes_1.ShellApiErrors.NotConnected);
            }
        });
        return proxy;
    }
}
//# sourceMappingURL=no-db.js.map