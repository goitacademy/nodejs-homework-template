"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongodb_build_info_1 = __importDefault(require("mongodb-build-info"));
function getConnectInfo(uri, mongoshVersion, buildInfo, cmdLineOpts, atlasVersion, topology) {
    var _a;
    buildInfo !== null && buildInfo !== void 0 ? buildInfo : (buildInfo = {});
    const { isGenuine: is_genuine, serverName: non_genuine_server_name } = mongodb_build_info_1.default.getGenuineMongoDB(buildInfo, cmdLineOpts);
    const { isDataLake: is_data_federation, dlVersion: dl_version } = mongodb_build_info_1.default.getDataLake(buildInfo);
    const auth_type = topology.s.credentials
        ? topology.s.credentials.mechanism : null;
    const { serverOs: server_os, serverArch: server_arch } = mongodb_build_info_1.default.getBuildEnv(buildInfo);
    return {
        is_atlas: !!(atlasVersion === null || atlasVersion === void 0 ? void 0 : atlasVersion.atlasVersion) || mongodb_build_info_1.default.isAtlas(uri),
        is_localhost: mongodb_build_info_1.default.isLocalhost(uri),
        is_do: mongodb_build_info_1.default.isDigitalOcean(uri),
        server_version: buildInfo.version,
        node_version: process.version,
        mongosh_version: mongoshVersion,
        server_os,
        uri,
        server_arch,
        is_enterprise: mongodb_build_info_1.default.isEnterprise(buildInfo),
        auth_type,
        is_data_federation,
        dl_version,
        atlas_version: (_a = atlasVersion === null || atlasVersion === void 0 ? void 0 : atlasVersion.atlasVersion) !== null && _a !== void 0 ? _a : null,
        is_genuine,
        non_genuine_server_name
    };
}
exports.default = getConnectInfo;
//# sourceMappingURL=connect-info.js.map