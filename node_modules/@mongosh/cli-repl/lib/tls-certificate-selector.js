"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTlsCertificateSelector = void 0;
const errors_1 = require("@mongosh/errors");
function getTlsCertificateSelector(selector) {
    var _a, _b, _c;
    if (!selector) {
        return;
    }
    const exportCertificateAndPrivateKey = getCertificateExporter();
    if (!exportCertificateAndPrivateKey) {
        throw new errors_1.MongoshUnimplementedError('--tlsCertificateSelector is not supported on this platform');
    }
    const match = selector.match(/^(?<key>\w+)=(?<value>.+)/);
    if (!match || !['subject', 'thumbprint'].includes((_b = (_a = match.groups) === null || _a === void 0 ? void 0 : _a.key) !== null && _b !== void 0 ? _b : '')) {
        throw new errors_1.MongoshInvalidInputError('--tlsCertificateSelector needs to include subject or thumbprint');
    }
    const { key, value } = (_c = match.groups) !== null && _c !== void 0 ? _c : {};
    const search = key === 'subject' ? { subject: value } : { thumbprint: Buffer.from(value, 'hex') };
    try {
        const { passphrase, pfx } = exportCertificateAndPrivateKey(search);
        return { passphrase, pfx };
    }
    catch (err) {
        throw new errors_1.MongoshInvalidInputError(`Could not resolve certificate specification '${selector}': ${err === null || err === void 0 ? void 0 : err.message}`);
    }
}
exports.getTlsCertificateSelector = getTlsCertificateSelector;
function getCertificateExporter() {
    if (process.env.TEST_OS_EXPORT_CERTIFICATE_AND_KEY_PATH) {
        if (typeof __non_webpack_require__ === 'function') {
            return __non_webpack_require__(process.env.TEST_OS_EXPORT_CERTIFICATE_AND_KEY_PATH);
        }
        return require(process.env.TEST_OS_EXPORT_CERTIFICATE_AND_KEY_PATH);
    }
    try {
        switch (process.platform) {
            case 'win32':
                return require('win-export-certificate-and-key');
            case 'darwin':
                return require('macos-export-certificate-and-key');
            default:
                return undefined;
        }
    }
    catch (_a) { }
    return undefined;
}
//# sourceMappingURL=tls-certificate-selector.js.map