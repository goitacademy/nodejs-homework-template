"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOsInfo = exports.getLinuxOsRelease = void 0;
const os = __importStar(require("os"));
const fs_1 = require("fs");
async function getLinuxOsRelease() {
    var _a, _b;
    if (process.platform !== 'linux') {
        return {};
    }
    try {
        const osRelease = Object.fromEntries((await fs_1.promises.readFile('/etc/os-release', 'utf-8'))
            .split('\n')
            .map((line) => {
            const [k, ...v] = line.trim().split('=');
            if (!k || v.length === 0) {
                return null;
            }
            return [k, v.join('=').replace(/^("|')?(.+)?\1$/, '$2')];
        })
            .filter((kv) => kv !== null));
        return {
            os_linux_dist: (_a = osRelease.ID) !== null && _a !== void 0 ? _a : 'Unknown',
            os_linux_release: (_b = osRelease.VERSION_ID) !== null && _b !== void 0 ? _b : 'Unknown'
        };
    }
    catch (_c) {
        return {
            os_linux_dist: 'Unknown',
            os_linux_release: 'Unknown'
        };
    }
}
exports.getLinuxOsRelease = getLinuxOsRelease;
async function getOsInfo() {
    return {
        os_type: os.type(),
        os_version: os.version(),
        os_arch: os.arch(),
        ...(await getLinuxOsRelease())
    };
}
exports.getOsInfo = getOsInfo;
//# sourceMappingURL=get-os-info.js.map