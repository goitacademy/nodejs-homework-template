const mongoose = require("mongoose");
const Joi = require("joi");

const schemaContacts = new mongoose.Schema ({
 name: {
    type: String,
    required: [true, 'Set name for contact']
 },
 email: {
    type: String,
 },
 phone: {
    type: String,
 },
 favorite: {
    type: Boolean,
    default: false,
 }
}, {versionKey: false, timestamps: true})



const joiSchema = Joi.object({

   name: Joi.string()
   .min(2)
   .regex(/^\p{L}+$/u)
   .messages({
     "string.pattern.base": "Invalid name. It should only contain letters",
   })
   .required(),
 email: Joi.string()
   .email({
     minDomainSegments: 2,
     tlds: { allow: ["com", "net"] },
   })
   .messages({
     "string.pattern.base": "Invalid email adress",
   })
   .required(),
 phone: Joi.string()
   .regex(/^\+?[0-9]{7,15}$/)
   .messages({
     "string.pattern.base":
       'Invalid phone number format. It should consist of digits and optional "+" sign for international numbers.',
   })
   .required(),
});

const patchSchema = Joi.object({
 favorite: Joi.boolean().required(),
});


module.exports = {
   model: mongoose.model('Contact', schemaContacts),
   joiSchema,
   patchSchema,
 };
